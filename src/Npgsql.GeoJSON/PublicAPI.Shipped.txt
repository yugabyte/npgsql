#nullable enable
YBNpgsql.GeoJSON.CrsMap
YBNpgsql.GeoJSON.CrsMapExtensions
YBNpgsql.GeoJSONOptions
YBNpgsql.GeoJSONOptions.BoundingBox = 1 -> YBNpgsql.GeoJSONOptions
YBNpgsql.GeoJSONOptions.LongCRS = 4 -> YBNpgsql.GeoJSONOptions
YBNpgsql.GeoJSONOptions.None = 0 -> YBNpgsql.GeoJSONOptions
YBNpgsql.GeoJSONOptions.ShortCRS = 2 -> YBNpgsql.GeoJSONOptions
YBNpgsql.NpgsqlGeoJSONExtensions
static YBNpgsql.GeoJSON.CrsMapExtensions.GetCrsMap(this YBNpgsql.NpgsqlDataSource! dataSource) -> YBNpgsql.GeoJSON.CrsMap!
static YBNpgsql.GeoJSON.CrsMapExtensions.GetCrsMapAsync(this YBNpgsql.NpgsqlDataSource! dataSource) -> System.Threading.Tasks.Task<YBNpgsql.GeoJSON.CrsMap!>!
static YBNpgsql.NpgsqlGeoJSONExtensions.UseGeoJson(this YBNpgsql.TypeMapping.INpgsqlTypeMapper! mapper, YBNpgsql.GeoJSON.CrsMap! crsMap, YBNpgsql.GeoJSONOptions options = YBNpgsql.GeoJSONOptions.None, bool geographyAsDefault = false) -> YBNpgsql.TypeMapping.INpgsqlTypeMapper!
static YBNpgsql.NpgsqlGeoJSONExtensions.UseGeoJson(this YBNpgsql.TypeMapping.INpgsqlTypeMapper! mapper, YBNpgsql.GeoJSONOptions options = YBNpgsql.GeoJSONOptions.None, bool geographyAsDefault = false) -> YBNpgsql.TypeMapping.INpgsqlTypeMapper!
